/* Generated By:JavaCC: Do not edit this line. SPARQLParserConstants.java */
package parser;

public interface SPARQLParserConstants {

  int EOF = 0;
  int SINGLE_LINE_COMMENT = 6;
  int Q_URI = 7;
  int QNAME_NS = 8;
  int QNAME = 9;
  int VAR = 10;
  int LANGTAG = 11;
  int A2Z = 12;
  int A2ZN = 13;
  int NCCHAR1 = 14;
  int NCCHAR_FULL = 15;
  int NCNAME1 = 16;
  int NCNAME2 = 17;
  int INTEGER_10 = 18;
  int FLOATING_POINT = 19;
  int DIGITS = 20;
  int EXPONENT = 21;
  int STRING_LITERAL1 = 22;
  int STRING_LITERAL2 = 23;
  int BASE = 24;
  int PREFIX = 25;
  int SELECT = 26;
  int DISTINCT = 27;
  int DESCRIBE = 28;
  int CONSTRUCT = 29;
  int ASK = 30;
  int FROM = 31;
  int NAMED = 32;
  int WHERE = 33;
  int GRAPH = 34;
  int UNION = 35;
  int OPTIONAL = 36;
  int FILTER = 37;
  int EVALUATE = 38;
  int NOT = 39;
  int ORDER = 40;
  int BY = 41;
  int ASC = 42;
  int DESC = 43;
  int LIMIT = 44;
  int OFFSET = 45;
  int TRUE = 46;
  int FALSE = 47;
  int CL = 48;
  int DP = 49;
  int OP = 50;
  int AP = 51;
  int NOP = 52;
  int LPARENTHESIS = 53;
  int RPARENTHESIS = 54;
  int LBRACE = 55;
  int RBRACE = 56;
  int LBRACKET = 57;
  int RBRACKET = 58;
  int SEMICOLON = 59;
  int COMMA = 60;
  int DOT = 61;
  int BANG = 62;
  int COLON = 63;
  int EQ = 64;
  int NEQ = 65;
  int GT = 66;
  int LT = 67;
  int LE = 68;
  int GE = 69;
  int OR = 70;
  int AND = 71;
  int PLUS = 72;
  int MINUS = 73;
  int STAR = 74;
  int SLASH = 75;
  int REMINDER = 76;
  int ASSIGN = 77;
  int HATHAT = 78;
  int FUNCTION_NAME = 79;

  int DEFAULT = 0;

  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<SINGLE_LINE_COMMENT>",
    "<Q_URI>",
    "<QNAME_NS>",
    "<QNAME>",
    "<VAR>",
    "<LANGTAG>",
    "<A2Z>",
    "<A2ZN>",
    "<NCCHAR1>",
    "<NCCHAR_FULL>",
    "<NCNAME1>",
    "<NCNAME2>",
    "<INTEGER_10>",
    "<FLOATING_POINT>",
    "<DIGITS>",
    "<EXPONENT>",
    "<STRING_LITERAL1>",
    "<STRING_LITERAL2>",
    "\"base\"",
    "\"prefix\"",
    "\"select\"",
    "\"distinct\"",
    "\"describe\"",
    "\"construct\"",
    "\"ask\"",
    "\"from\"",
    "\"named\"",
    "\"where\"",
    "\"graph\"",
    "\"union\"",
    "\"optional\"",
    "\"filter\"",
    "\"evaluate\"",
    "\"not\"",
    "\"order\"",
    "\"by\"",
    "\"asc\"",
    "\"desc\"",
    "\"limit\"",
    "\"offset\"",
    "\"true\"",
    "\"false\"",
    "\"cl@\"",
    "\"dp@\"",
    "\"op@\"",
    "\"ap@\"",
    "\"nop@\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"!\"",
    "\":\"",
    "\"=\"",
    "\"!=\"",
    "\">\"",
    "\"<\"",
    "\"<=\"",
    "\">=\"",
    "\"||\"",
    "\"&&\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\":=\"",
    "\"^^\"",
    "<FUNCTION_NAME>",
  };

}
